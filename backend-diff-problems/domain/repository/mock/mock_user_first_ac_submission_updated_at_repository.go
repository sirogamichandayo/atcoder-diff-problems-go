// Code generated by MockGen. DO NOT EDIT.
// Source: user_first_ac_submission_updated_at_repository.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserFirstAcSubmissionUpdatedAtRepository is a mock of UserFirstAcSubmissionUpdatedAtRepository interface.
type MockUserFirstAcSubmissionUpdatedAtRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserFirstAcSubmissionUpdatedAtRepositoryMockRecorder
}

// MockUserFirstAcSubmissionUpdatedAtRepositoryMockRecorder is the mock recorder for MockUserFirstAcSubmissionUpdatedAtRepository.
type MockUserFirstAcSubmissionUpdatedAtRepositoryMockRecorder struct {
	mock *MockUserFirstAcSubmissionUpdatedAtRepository
}

// NewMockUserFirstAcSubmissionUpdatedAtRepository creates a new mock instance.
func NewMockUserFirstAcSubmissionUpdatedAtRepository(ctrl *gomock.Controller) *MockUserFirstAcSubmissionUpdatedAtRepository {
	mock := &MockUserFirstAcSubmissionUpdatedAtRepository{ctrl: ctrl}
	mock.recorder = &MockUserFirstAcSubmissionUpdatedAtRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserFirstAcSubmissionUpdatedAtRepository) EXPECT() *MockUserFirstAcSubmissionUpdatedAtRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockUserFirstAcSubmissionUpdatedAtRepository) Get() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockUserFirstAcSubmissionUpdatedAtRepositoryMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUserFirstAcSubmissionUpdatedAtRepository)(nil).Get))
}

// Update mocks base method.
func (m *MockUserFirstAcSubmissionUpdatedAtRepository) Update(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockUserFirstAcSubmissionUpdatedAtRepositoryMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockUserFirstAcSubmissionUpdatedAtRepository)(nil).Update), arg0)
}
