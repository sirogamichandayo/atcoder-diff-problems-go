// Code generated by MockGen. DO NOT EDIT.
// Source: problem_difficulty_repository.go

// Package repository is a generated GoMock package.
package repository

import (
	entity "diff-problems/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProblemDifficultyRepository is a mock of ProblemDifficultyRepository interface.
type MockProblemDifficultyRepository struct {
	ctrl     *gomock.Controller
	recorder *MockProblemDifficultyRepositoryMockRecorder
}

// MockProblemDifficultyRepositoryMockRecorder is the mock recorder for MockProblemDifficultyRepository.
type MockProblemDifficultyRepositoryMockRecorder struct {
	mock *MockProblemDifficultyRepository
}

// NewMockProblemDifficultyRepository creates a new mock instance.
func NewMockProblemDifficultyRepository(ctrl *gomock.Controller) *MockProblemDifficultyRepository {
	mock := &MockProblemDifficultyRepository{ctrl: ctrl}
	mock.recorder = &MockProblemDifficultyRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProblemDifficultyRepository) EXPECT() *MockProblemDifficultyRepositoryMockRecorder {
	return m.recorder
}

// BulkUpsert mocks base method.
func (m *MockProblemDifficultyRepository) BulkUpsert(arg0 entity.ProblemDifficultyList) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkUpsert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkUpsert indicates an expected call of BulkUpsert.
func (mr *MockProblemDifficultyRepositoryMockRecorder) BulkUpsert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkUpsert", reflect.TypeOf((*MockProblemDifficultyRepository)(nil).BulkUpsert), arg0)
}
